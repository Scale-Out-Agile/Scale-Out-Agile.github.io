{
  "name": "assemble-contrib-wordcount",
  "description": "Assemble plugin for displaying wordcount and average reading time on blog posts or pages.",
  "version": "0.3.2",
  "homepage": "https://github.com/assemble/assemble-contrib-wordcount",
  "author": {
    "name": "Jon Schlinkert",
    "url": "http://github.com/jonschlinkert/"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/assemble/assemble-contrib-wordcount/blob/master/LICENSE-MIT"
    }
  ],
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/assemble/assemble-contrib-wordcount.git"
  },
  "bugs": {
    "url": "https://github.com/assemble/assemble-contrib-wordcount/issues"
  },
  "engines": {
    "node": ">=0.8"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "cheerio": "~0.12.3",
    "lodash": "~2.4.0"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.7.1",
    "grunt-readme": "~0.3.0",
    "grunt-repos": "~0.1.2"
  },
  "keywords": [
    "assemble",
    "assembleplugin",
    "blog",
    "post",
    "wordcount",
    "words",
    "grunt"
  ],
  "contributors": [
    {
      "name": "Jon Schlinkert",
      "url": "http://github.com/jonschlinkert"
    }
  ],
  "readme": "# assemble-contrib-wordcount [![NPM version](https://badge.fury.io/js/assemble-contrib-wordcount.png)](http://badge.fury.io/js/assemble-contrib-wordcount) \r\n\r\n> Assemble plugin for displaying wordcount and average reading time on blog posts or pages.\r\n\r\n## Quickstart\r\nIn the command line, run:\r\n\r\n```bash\r\nnpm install assemble-contrib-wordcount --save\r\n```\r\n\r\nNext, register the plugin with Assemble in your project's Gruntfile:\r\n\r\n```js\r\nassemble: {\r\n  options: {\r\n    plugins: ['assemble-contrib-wordcount', 'other/plugins/*']\r\n  }\r\n}\r\n```\r\nYou can also use the plugin with specific targets:\r\n\r\n```js\r\nassemble: {\r\n  foo: {\r\n    options: {\r\n      plugins: ['assemble-contrib-wordcount', 'other/plugins/*']\r\n    },\r\n    files: {'dist/': 'content/*.md'}\r\n  },\r\n  // The plugin won't run on this target\r\n  bar: {\r\n    files: {'dist/': 'templates/*.hbs'}\r\n  }\r\n}\r\n```\r\n\r\nVisit the [plugins docs](http://assemble.io/plugins/) for more info or for help getting started.\r\n\r\n\r\n\r\n## Options\r\n#### seconds\r\nType: `Booleand`\r\nDefault: `undefined`\r\n\r\nDefine `seconds: true` in the option to display seconds and minutes. Example: `7 min, 47 sec`. (by default time is rendered in 1 minute increments, e.g. `8 min`).\r\n\r\n#### placement\r\nType: `String`\r\nDefault: `prepend`\r\n\r\nDetermines whether the wordcount and reading time will be prepended or appended. Example:\r\n\r\n#### selector\r\nType: `String`\r\nDefault: `.wordcount`\r\n\r\nThe selector to target for the element that wraps the content that contains the words to count.\r\n\r\n#### countSelector\r\nType: `String`\r\nDefault: `.label-wordcount`\r\n\r\nThe selector to use for the element that will render the wordcount.\r\n\r\n#### timeSelector\r\nType: `String`\r\nDefault: `.label-reading-time`\r\n\r\nThe selector to use for the element that will render the estimated reading time.\r\n\r\n\r\n\r\n## Usage Examples\r\n#### Basic example\r\n\r\n**In your templates**\r\n\r\n* `class=\"wordcount\"` must wrap the content that the plugin should run against\r\n* `class=\"label-wordcount\"` on the element that should render the wordcount.\r\n* `class=\"label-reading-time\"` on the element that should render the reading time.\r\n\r\n```html\r\n<!-- Blog Posts -->\r\n<div class=\"wordcount\">\r\n  <span class=\"label-wordcount\"> words</span>\r\n  <span class=\"label-reading-time\"> read</span>\r\n  {{> body }}\r\n</div>\r\n```\r\n\r\n**Rendered HTML**\r\n\r\n```html\r\n<!-- Blog Posts -->\r\n<div class=\"wordcount\">\r\n  <span class=\"label-wordcount\" data-wordcount=\"1561\">1561 words</span>\r\n  <span class=\"label-reading-time\" data-reading-time=\"7 min\">7 min read</span>\r\n  <p>In deserunt venison doner velit cow pastrami magna dolore ut jerky proident\r\n  esse laborum. Fatback strip steak biltong tri-tip beef pork belly spare ribs\r\n  in ut capicola. Sunt qui t-bone jerky est culpa. Deserunt duis adipisicing\r\n  ullamco ex, eiusmod beef salami labore non chuck occaecat tenderloin shank\r\n  cillum. Quis t-bone hamburger pancetta aliqua dolor. Magna eu ground round\r\n  aliqua...\r\n</div>\r\n```\r\n\r\n#### Change selectors\r\n\r\nThe default selector is `.wordcount`. You can change this in the options as follows:\r\n\r\n```js\r\nassemble: {\r\n  options: {\r\n    plugins: ['assemble-contrib-wordcount'],\r\n    wordcount: {\r\n      selector: '.foo',\r\n      countSelector: '.bar'\r\n      timeSelector: '.baz'\r\n    }\r\n  },\r\n  files: {}\r\n}\r\n```\r\nAnd in your templates:\r\n\r\n```html\r\n<!-- Blog Posts -->\r\n<div class=\"foo\">\r\n  {{> post }}\r\n</div>\r\n```\r\nThen in `post.hbs`:\r\n\r\n```html\r\n<!-- Post -->\r\n<article class=\"post\">\r\n  <h1>Breaking News</h1>\r\n  <span class=\"bar\"> words</span>\r\n  <span class=\"baz\"> read</span>\r\n</article>\r\n```\r\n\r\n#### Display seconds\r\n\r\nIn the plugin's options in the Assemble task, define `seconds: true`:\r\n\r\n```js\r\nassemble: {\r\n  options: {\r\n    plugins: ['assemble-contrib-wordcount'],\r\n    wordcount: {\r\n      seconds: true\r\n    }\r\n  },\r\n  files: {}\r\n}\r\n```\r\n\r\nThe result will look something like this:\r\n\r\n```html\r\n<span class=\"label-wordcount\" data-wordcount=\"1561\">1561 words</span>\r\n<span class=\"label-reading-time\" data-reading-time=\"7 minutes, 48 seconds\">7 minutes, 48 seconds read</span>\r\n```\r\n\r\nIf less than 1 minute, the results will look something like this:\r\n\r\n```html\r\n<span class=\"label-wordcount\" data-wordcount=\"12\">12 words</span>\r\n<span class=\"label-reading-time\" data-reading-time=\"2 seconds\">2 seconds read</span>\r\n```\r\n\r\n\r\n#### Placement\r\nBy default, wordcount and reading time are prepended to the text node of the specified element. Example:\r\n\r\n```html\r\n<span class=\"label-wordcount\" data-wordcount=\"1561\">1561 words</span>\r\n<span class=\"label-reading-time\" data-reading-time=\"7 minutes, 48 seconds\">7 minutes, 48 seconds read</span>\r\n```\r\n\r\nYou can change this to `append` in the options:\r\n\r\n```js\r\noptions: {\r\n  wordcount: {\r\n    placement: 'append'\r\n  }\r\n}\r\n```\r\nAnd this template:\r\n\r\n```html\r\n<span class=\"label-wordcount\">Words: </span>\r\n<span class=\"label-reading-time\">Estimated reading time: </span>\r\n```\r\n\r\nWould result in:\r\n\r\n```html\r\n<span class=\"label-wordcount\" data-wordcount=\"1561\">Words: 1561</span>\r\n<span class=\"label-reading-time\" data-reading-time=\"7 minutes, 48 seconds\">Estimated reading time: 8 minutes</span>\r\n```\r\n\r\n\r\n***\r\n\r\n## Assemble plugins\r\nHere are some related projects you might be interested in from the [Assemble](http://assemble.io) core team.\r\n\r\n+ [assemble-contrib-anchors](https://github.com/assemble/assemble-contrib-anchors): Assemble plugin for creating anchor tags from generated html. \r\n+ [assemble-contrib-contextual](https://github.com/assemble/assemble-contrib-contextual): Generates a JSON file containing the context of each page. Basic plugin to help see what's happening in the build. \r\n+ [assemble-contrib-decompress](https://github.com/assemble/assemble-contrib-decompress): Assemble plugin for extracting zip, tar and tar.gz archives.  \r\n+ [assemble-contrib-download](https://github.com/assemble/assemble-contrib-download): Assemble plugin for downloading files from GitHub. \r\n+ [assemble-contrib-lunr](https://github.com/assemble/assemble-contrib-lunr): Assemble plugin for creating a search engine within your static site using lunr.js. \r\n+ [assemble-contrib-markdown](https://github.com/assemble/assemble-contrib-markdown): Convert markdown files to HTML using marked.js. This plugin is an alternative to Assemble's markdown Handlebars helpers. Both are useful in different scenarios. \r\n+ [assemble-contrib-permalinks](https://github.com/assemble/assemble-contrib-permalinks): Permalinks plugin for Assemble, the static site generator for Grunt.js and Yeoman. This plugin enables powerful and configurable URI replacement patterns, presets, uses Moment.js for parsing dates, and much more. \r\n+ [assemble-contrib-sitemap](https://github.com/assemble/assemble-contrib-sitemap): Sitemap generator plugin for Assemble \r\n+ [assemble-contrib-toc](https://github.com/assemble/assemble-contrib-toc): Create a table of contents in the generated HTML, using Cheerio.js \r\n\r\nVisit [assemble.io/plugins](http:/assemble.io/plugins/) for more information about [Assemble](http:/assemble.io/) plugins.\r\n\r\n\r\n\r\n## Contributing\r\nFind a bug? Have a feature request? Please [create an Issue](https://github.com/assemble/assemble-contrib-wordcount/issues).\r\n\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][], and build the documentation with [grunt-readme](https://github.com/assemble/grunt-readme).\r\n\r\nPull requests are also encouraged, and if you find this project useful please consider \"starring\" it to show your support! Thanks!\r\n\r\n\r\n## Authors\r\n\r\n**Jon Schlinkert**\r\n\r\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\r\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\r\n\r\n**Brian Woodward**\r\n\r\n+ [github/doowb](https://github.com/doowb)\r\n+ [twitter/doowb](http://twitter.com/jonschlinkert)\r\n\r\n\r\n## License\r\nCopyright (c) 2013 Jon Schlinkert, contributors.\r\nReleased under the MIT license\r\n\r\n***\r\n\r\n_This file was generated by [grunt-readme](https://github.com/assemble/grunt-readme) on Friday, December 13, 2013._\r\n\r\n[grunt]: http://gruntjs.com/\r\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\r\n[package.json]: https://npmjs.org/doc/json.html\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "assemble-contrib-wordcount@0.3.2",
  "_shasum": "2e2b97a7ff2b8bfa89dad5decc9dd60d6cf58014",
  "_from": "assemble-contrib-wordcount@~0.3.0",
  "_resolved": "https://registry.npmjs.org/assemble-contrib-wordcount/-/assemble-contrib-wordcount-0.3.2.tgz"
}
